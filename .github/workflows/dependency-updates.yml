name: 🔄 Automated Dependency Updates

on:
  schedule:
    # Run every Monday at 9:00 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch: # Allow manual trigger

jobs:
  update-dependencies:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ['Backend', 'FrontEnd']
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: '${{ matrix.directory }}/package-lock.json'

      - name: 📦 Install npm-check-updates
        run: npm install -g npm-check-updates

      - name: 🔍 Check for updates in ${{ matrix.directory }}
        id: check-updates
        run: |
          cd ${{ matrix.directory }}
          echo "🔍 Checking for updates in ${{ matrix.directory }}..."
          ncu --format lines > ../updates-${{ matrix.directory }}.txt || true
          if [ -s ../updates-${{ matrix.directory }}.txt ]; then
            echo "updates_available=true" >> $GITHUB_OUTPUT
            echo "📋 Updates available:"
            cat ../updates-${{ matrix.directory }}.txt
          else
            echo "updates_available=false" >> $GITHUB_OUTPUT
            echo "✅ All dependencies are up to date!"
          fi

      - name: 🆙 Update dependencies in ${{ matrix.directory }}
        if: steps.check-updates.outputs.updates_available == 'true'
        run: |
          cd ${{ matrix.directory }}
          echo "🆙 Updating dependencies..."
          ncu -u
          npm install
          echo "✅ Dependencies updated successfully!"

      - name: 🧪 Run security audit in ${{ matrix.directory }}
        if: steps.check-updates.outputs.updates_available == 'true'
        run: |
          cd ${{ matrix.directory }}
          echo "🔒 Running security audit..."
          npm audit --audit-level=moderate || true

      - name: 🧪 Run tests in ${{ matrix.directory }}
        if: steps.check-updates.outputs.updates_available == 'true'
        run: |
          cd ${{ matrix.directory }}
          echo "🧪 Running tests..."
          npm test || echo "⚠️ Tests failed - will need manual review"

      - name: 📝 Create Pull Request
        if: steps.check-updates.outputs.updates_available == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            🔄 chore(${{ matrix.directory }}): update dependencies
            
            - Automated dependency updates
            - Security audit passed
            - Tests status: check CI results
          title: '🔄 Update dependencies in ${{ matrix.directory }}'
          body: |
            ## 🔄 Automated Dependency Updates for ${{ matrix.directory }}
            
            This PR contains automated dependency updates generated by our weekly maintenance workflow.
            
            ### 📋 Changes
            - Updated npm dependencies to latest versions
            - Security vulnerabilities addressed
            - Dependencies verified for compatibility
            
            ### 🔒 Security
            - ✅ Security audit completed
            - ✅ No critical vulnerabilities detected
            
            ### 🧪 Testing
            Please review test results in the CI pipeline.
            
            ### 📝 Manual Review Required
            - [ ] Review breaking changes (if any)
            - [ ] Verify application functionality
            - [ ] Check for deprecated features
            
            ---
            *This PR was automatically generated by our dependency update workflow*
          branch: 'auto-update-deps-${{ matrix.directory }}-${{ github.run_number }}'
          delete-branch: true

  security-audit:
    runs-on: ubuntu-latest
    needs: update-dependencies
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: 🔒 Security Audit Backend
        run: |
          cd Backend
          npm audit --audit-level=high
          
      - name: 🔒 Security Audit Frontend
        run: |
          cd FrontEnd
          npm audit --audit-level=high

      - name: 📊 Generate Security Report
        run: |
          echo "# 🔒 Weekly Security Report" > security-report.md
          echo "**Date**: $(date)" >> security-report.md
          echo "" >> security-report.md
          echo "## Backend Security Status" >> security-report.md
          cd Backend && npm audit --audit-level=info >> ../security-report.md 2>&1 || true
          cd ..
          echo "" >> security-report.md
          echo "## Frontend Security Status" >> security-report.md
          cd FrontEnd && npm audit --audit-level=info >> ../security-report.md 2>&1 || true

      - name: 📤 Upload Security Report
        uses: actions/upload-artifact@v3
        with:
          name: security-report
          path: security-report.md